<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.whattowatch.wtw.mapper.MovieMapper" >
  <resultMap id="BaseResultMap" type="top.whattowatch.wtw.po.Movie" >
    <id column="movie_id" property="movieId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="top.whattowatch.wtw.po.Movie" extends="BaseResultMap" >
    <result column="title" property="title" jdbcType="LONGVARCHAR" />
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
    <result column="cover" property="cover" jdbcType="LONGVARCHAR" />
    <result column="resources" property="resources" jdbcType="LONGVARCHAR" />
    <result column="url" property="url" jdbcType="LONGVARCHAR" />
    <result column="types" property="types" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    movie_id
  </sql>
  <sql id="Blob_Column_List" >
    title, introduction, cover, resources, url, types
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="top.whattowatch.wtw.po.MovieExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="top.whattowatch.wtw.po.MovieExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from movie
    where movie_id = #{movieId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from movie
    where movie_id = #{movieId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="top.whattowatch.wtw.po.MovieExample" >
    delete from movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.whattowatch.wtw.po.Movie" >
    insert into movie (movie_id, title, introduction, 
      cover, resources, url, 
      types)
    values (#{movieId,jdbcType=INTEGER}, #{title,jdbcType=LONGVARCHAR}, #{introduction,jdbcType=LONGVARCHAR}, 
      #{cover,jdbcType=LONGVARCHAR}, #{resources,jdbcType=LONGVARCHAR}, #{url,jdbcType=LONGVARCHAR}, 
      #{types,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.whattowatch.wtw.po.Movie" >
    insert into movie
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="movieId != null" >
        movie_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
      <if test="cover != null" >
        cover,
      </if>
      <if test="resources != null" >
        resources,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="types != null" >
        types,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="movieId != null" >
        #{movieId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="cover != null" >
        #{cover,jdbcType=LONGVARCHAR},
      </if>
      <if test="resources != null" >
        #{resources,jdbcType=LONGVARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=LONGVARCHAR},
      </if>
      <if test="types != null" >
        #{types,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <insert id="insertBatch" parameterType="java.util.List" >
    insert into movie(title,introduction,cover,resources,url,types)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.title},#{item.introduction},#{item.cover},#{item.resources},#{item.url},#{item.types})
    </foreach>
  </insert>
  <select id="countByExample" parameterType="top.whattowatch.wtw.po.MovieExample" resultType="java.lang.Integer" >
    select count(*) from movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update movie
    <set >
      <if test="record.movieId != null" >
        movie_id = #{record.movieId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.cover != null" >
        cover = #{record.cover,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.resources != null" >
        resources = #{record.resources,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.types != null" >
        types = #{record.types,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update movie
    set movie_id = #{record.movieId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=LONGVARCHAR},
      introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      cover = #{record.cover,jdbcType=LONGVARCHAR},
      resources = #{record.resources,jdbcType=LONGVARCHAR},
      url = #{record.url,jdbcType=LONGVARCHAR},
      types = #{record.types,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update movie
    set movie_id = #{record.movieId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.whattowatch.wtw.po.Movie" >
    update movie
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="cover != null" >
        cover = #{cover,jdbcType=LONGVARCHAR},
      </if>
      <if test="resources != null" >
        resources = #{resources,jdbcType=LONGVARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=LONGVARCHAR},
      </if>
      <if test="types != null" >
        types = #{types,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where movie_id = #{movieId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="top.whattowatch.wtw.po.Movie" >
    update movie
    set title = #{title,jdbcType=LONGVARCHAR},
      introduction = #{introduction,jdbcType=LONGVARCHAR},
      cover = #{cover,jdbcType=LONGVARCHAR},
      resources = #{resources,jdbcType=LONGVARCHAR},
      url = #{url,jdbcType=LONGVARCHAR},
      types = #{types,jdbcType=LONGVARCHAR}
    where movie_id = #{movieId,jdbcType=INTEGER}
  </update>
</mapper>